from aiogram import types
from aiogram.types import ReplyKeyboardRemove, InlineKeyboardMarkup
from config import ADMIN_CHAT_ID
from keyboards import car_keyboard, time_keyboard, hours_keyboard, agree_disagree_keyboard
import os
import re

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}

# –®–∞–≥ 1: –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ:", reply_markup=car_keyboard)

# –®–∞–≥ 2: –í—ã–±–æ—Ä –∞–≤—Ç–æ
async def choose_car(message: types.Message):
    user_data[message.from_user.id] = {"car": message.text}
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã:", reply_markup=time_keyboard)

# –®–∞–≥ 3: –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –∞—Ä–µ–Ω–¥—ã (–í–µ—Å—å –¥–µ–Ω—å)
async def full_day(message: types.Message):
    user_data[message.from_user.id]["time"] = "–í–µ—Å—å –¥–µ–Ω—å"
    await send_rental_rules(message)

# –®–∞–≥ 4: –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –∞—Ä–µ–Ω–¥—ã (–ø–æ—á–∞—Å–æ–≤–∞—è –∞—Ä–µ–Ω–¥–∞)
async def hourly_rental(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –∞—Ä–µ–Ω–¥—ã:", reply_markup=hours_keyboard)

async def choose_hours(message: types.Message):
  try:
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–∫—É –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞
    match = re.search(r"\d+", message.text)
    if match:
      hours = int(match.group())  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ int

      if 1 <= hours <= 23:
        user_data[message.from_user.id]["time"] = f"{hours} —á–∞—Å–æ–≤"
        await message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∞—Ä–µ–Ω–¥—É –Ω–∞ {hours} —á–∞—Å–æ–≤.", reply_markup=ReplyKeyboardRemove())
        await send_rental_rules(message)  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
      else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 1 –¥–æ 23 —á–∞—Å–æ–≤.")
    else:
      await message.answer("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏.")
  except ValueError:
    await message.answer("‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∫–Ω–æ–ø–∫–∞–º–∏.")

# –®–∞–≥ 6: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∞–≤–∏–ª –∞—Ä–µ–Ω–¥—ã –∏ –∑–∞–ø—Ä–æ—Å —Å–æ–≥–ª–∞—Å–∏—è
async def send_rental_rules(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ —É–∂–µ –ø—Ä–∞–≤–∏–ª–∞
    if "rules_sent" not in user_data.get(message.from_user.id, {}):
        user_data[message.from_user.id]["rules_sent"] = True
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∞—Ä–µ–Ω–¥—ã: ...\n\n–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å –Ω–∏–º–∏?",
            reply_markup=agree_disagree_keyboard
        )

# –®–∞–≥ 7: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–æ–≥–ª–∞—Å–∏—è
async def handle_agreement(message: types.Message):
    user_id = message.from_user.id

    if message.text == "‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω":
        user_data[user_id]["agreed"] = True
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ! –¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–∏—Ö –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤.", reply_markup=ReplyKeyboardRemove())
    elif message.text == "‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω":
        await message.answer("‚ùó –ë–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞ –∞—Ä–µ–Ω–¥—ã –∑–∞—è–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞.", reply_markup=ReplyKeyboardRemove())
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id in user_data:
            del user_data[user_id]

# –®–∞–≥ 8: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤
async def get_license_photo(message: types.Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
    if user_data.get(user_id, {}).get("agreed"):
        if message.photo:
            user_data[user_id]["license_photo"] = message.photo[-1].file_id
            await submit_application(message)
        else:
            await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–∏—Ö –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤.")
    else:
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Å–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∞—Ä–µ–Ω–¥—ã.")

# –®–∞–≥ 9: –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª
async def submit_application(message: types.Message):
    user_id = message.from_user.id
    data = user_data.get(user_id, {})

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
    if not all(key in data for key in ['car', 'time', 'license_photo']):
        await message.answer("‚ùó –ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.", reply_markup=ReplyKeyboardRemove())
        if user_id in user_data:
            del user_data[user_id]
        return

    application_text = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∞—Ä–µ–Ω–¥—É –∞–≤—Ç–æ!\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}\n"
        f"üöò –ê–≤—Ç–æ: {data['car']}\n"
        f"‚è≥ –í—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã: {data['time']}\n"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –≤ –∫–∞–Ω–∞–ª
    await message.bot.send_message(ADMIN_CHAT_ID, application_text)
    await message.bot.send_photo(ADMIN_CHAT_ID, photo=data["license_photo"])

    await message.answer("‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.", reply_markup=ReplyKeyboardRemove())

    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if user_id in user_data:
        del user_data[user_id]

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
def register_handlers(dp):
    dp.register_message_handler(start, commands=['start'])
    dp.register_message_handler(choose_car, lambda message: message.text in ["üöó –≠–∫–æ–Ω–æ–º", "üöô –ö–æ–º—Ñ–æ—Ä—Ç", "üöò –ë–∏–∑–Ω–µ—Å"])
    dp.register_message_handler(full_day, lambda message: message.text == "üïí –í–µ—Å—å –¥–µ–Ω—å")
    dp.register_message_handler(hourly_rental, lambda message: message.text == "‚è∞ –ü–æ—á–∞—Å–æ–≤–∞—è –∞—Ä–µ–Ω–¥–∞")
    dp.register_message_handler(choose_hours, lambda message: message.text.endswith("—á–∞—Å") or message.text.endswith("—á–∞—Å–æ–≤"))
    dp.register_message_handler(handle_agreement, lambda message: message.text in ["‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω", "‚ùå –ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω"])
    dp.register_message_handler(get_license_photo, content_types=types.ContentType.PHOTO)